<% layout('./layout/page')%>
<% block('title', game.title + " | SuperGames.com") %>

<div class="lobby">
    <div class="lobby_header">
        <div class="lobby_header_title">
            <span class="text-accent"><%= game.title %></span>
            <span class="lobby_header_title_online">Онлайн: <span>0</span></span>
        </div>
        <div class="lobby_header_btns">
            <a href="top"="">ТОП</a>
            <a href="history">История</a>
            <button class="my-btn" data-toggle="modal" data-target="#createRoomModal">+Создать комнату</button>
        </div>
    </div>
    <table class="lobby_table" id="lobbyTable">
        <thead>
            <tr>
                <th>Статус</th>
                <th>Создал</th>
                <th>Ставка</th>
                <th>Время хода</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
           
        </tbody>
    </table>
</div>

<%- partial('./partials/createRoom') %>
<%- partial('./partials/joinRoom') %>

<script>
    var socket = io.connect('http://<%=hostname%>:<%=port%>/<%= game.name %>');

    socket.on('connect', function () {
        socket.emit('room', 'main');
    });

    var roomsList;
    var table;

    socket.on('init', function (data) {
        roomsList = data.rooms;

        $(document).ready(() => {
            $('.lobby_header_title_online span')[0].innerText = data.online;

            // renderChat(data);
            console.log(data)

            table = $('#lobbyTable').DataTable({
                searching: false,
                paging: false,
                info:false,
                autoWidth: false
            });

            table.clear();

            const rooms = [];
            for (let i in data.rooms) {
                rooms.push(getRoomRow(data.rooms[i]));
            }

            table.rows.add(rooms).draw(false);

            $('#lobbyTable > tbody > tr').click(joiningDialogCb);

        });
    });

    socket.on('room:add', function (room) {
        roomsList[room.id] = room;

        table.row.add(getRoomRow(room)).draw(false);

        $('#' + room.id).click(joiningDialogCb);
    });

    socket.on('room:remove', function (roomId) {
        delete roomsList[roomId];

        table.row($('#' + roomId)).remove().draw(false);

    });

    socket.on('room:update', function (room) {
        roomsList[room.id] = room;

        table.row($('#' + room.id)).remove().draw(false);

        table.row.add(getRoomRow(room)).draw(false);

        $('#' + room.id).click(joiningDialogCb);
    })

    socket.on('online', function (data) {
        $('.lobby_header_title_online span')[0].innerText = data;
    });

    function getRoomRow(room) {
        const tr = document.createElement('tr');
        tr.id = room.id;

        const tds = [
            room.status,
            room.owner,
            room.bet,
            room.time,
            room.descr
        ].map(td => `<td>${td}</td>`);

        tr.innerHTML = tds.join('');

        return tr;
    }

    function joiningDialogCb(e) {
        const id = e.target.parentNode.id;

        if (!id) return;

        $('#joinRoomModal a.btn-success')[0].href = '/games/<%-game.name%>/room/' + id;
        $('#joinRoomModal a.btn-secondary')[0].href = '/games/<%-game.name%>/room/' + id + '/watch';

        const rowData = $(e.target.parentNode.children).map((i, e) => e.innerText);

        $('#jrmOwner')[0].innerText = rowData[1];
        $('#jrmBet')[0].innerText = rowData[2];
        $('#jrmTime')[0].innerText = rowData[3];
        $('#jrmDescr')[0].innerText = rowData[4];

        $('#joinRoomModal').modal('show');
    }

</script>

<!-- <% if(msg.type && msg.s) { %>
    <%-partial('./partials/messageModal')%>
<% } %> -->